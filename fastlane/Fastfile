default_platform(:ios)

platform :ios do
  desc "Build iOS app and upload to TestFlight"
  lane :build_and_upload do |options|
    version = (options[:version] || ENV['VERSION'] || '').strip
    build_number = (options[:build_number] || ENV['BUILD_NUMBER'] || '').strip

    api_key_path = File.join(Dir.pwd, 'fastlane', 'appstore_api_key.json')
    UI.user_error!("App Store Connect API key not found at #{api_key_path}") unless File.exist?(api_key_path)

    # Read configuration
    project_path = 'ios/App/App.xcworkspace'
    scheme = 'App'

    # Optionally set version and build number
    Dir.chdir('ios/App') do
      if !version.empty?
        sh("xcrun agvtool new-marketing-version #{version}")
      end
      if build_number.empty?
        # Use timestamp as default build number
        build_number = Time.now.strftime('%Y%m%d%H%M')
      end
      sh("xcrun agvtool new-version -all #{build_number}")
    end

    # Ensure CocoaPods installed for the workspace
    cocoapods(
      clean_install: true,
      repo_update: true,
      project_directory: 'ios/App'
    )

    # Build archive
    gym(
      workspace: project_path,
      scheme: scheme,
      configuration: 'Release',
      clean: true,
      export_method: 'app-store',
      output_directory: 'build',
      output_name: 'UniTracker.ipa',
      silent: false,
      include_bitcode: false,
      include_symbols: true
    )

    # Upload to TestFlight
    api_key = app_store_connect_api_key(
      key_id: JSON.parse(File.read(api_key_path))["key_id"],
      issuer_id: JSON.parse(File.read(api_key_path))["issuer_id"],
      key_content: JSON.parse(File.read(api_key_path))["key"],
      is_key_content_base64: false,
      in_house: false
    )

    pilot(
      api_key: api_key,
      skip_waiting_for_build_processing: false,
      notify_external_testers: false
    )
  end
end
